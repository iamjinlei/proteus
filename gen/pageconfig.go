package gen

import (
	"bytes"
	"fmt"

	"gopkg.in/yaml.v3"
)

var (
	pageConfigDivider = []byte("+++\n")
)

type pageConfig struct {
	m map[string]string
}

func newPageConfig(m map[string]string) *pageConfig {
	if m == nil {
		m = map[string]string{}
	}
	return &pageConfig{
		m: m,
	}
}

func extractPageConfig(src []byte) (*pageConfig, []byte, error) {
	left := bytes.Index(src, pageConfigDivider)
	if left == -1 {
		return newPageConfig(nil), src, nil
	}

	s := src[left+len(pageConfigDivider):]
	right := bytes.Index(s, pageConfigDivider)
	if right == -1 {
		return newPageConfig(nil), src, nil
	}

	cfg := map[string]string{}
	if err := yaml.Unmarshal(s[:right], &cfg); err != nil {
		return nil, nil, err
	}

	return newPageConfig(cfg), s[right+len(pageConfigDivider):], nil
}

func (c *pageConfig) header() []byte {
	if c.m["banner"] == "" {
		return []byte("")
	}

	return []byte(fmt.Sprintf("<img src=\"%s\" style=\"max-width:100%%;\">", c.m["banner"]))
}

func (c *pageConfig) footer() []byte {
	return []byte(`
	<div style="text-align: center;">
		<span style="font-size: 80%;">Generated by
		<a href="https://github.com/iamjinlei/proteus">proteus</a>
		</span>
	</div>`)
}
